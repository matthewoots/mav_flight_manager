cmake_minimum_required(VERSION 3.16.3)

project(mavFlightManager LANGUAGES CXX)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread -Wl,--no-as-needed -lz")

include(CheckCXXCompilerFlag)
include(CMakePrintHelpers)

if(NOT CMAKE_CXX_STANDARD) 
    set(CMAKE_CXX_STANDARD 17) 
endif()

find_package(MAVSDK REQUIRED)
find_package(Eigen3 REQUIRED)
find_package(fastrtps REQUIRED)
find_package(fastcdr REQUIRED)
find_package(Protobuf 3 REQUIRED)

add_subdirectory(external/yaml-cpp)
add_subdirectory(external/fmt)
add_subdirectory(external/sockpp)
add_subdirectory(external/msgs_idl)

set(MAVLINK_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/mavlink/v2.0/common)
set(IDL_MSG_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/msgs_idl)

include_directories(
    PUBLIC 
    ${EIGEN3_INCLUDE_DIRS}
    ${MAVLINK_INCLUDE_DIR}
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${IDL_MSG_DIR}
)

link_libraries(
    fastcdr 
    fastrtps 
    fastdds::optionparser
    fmt::fmt
    yaml-cpp::yaml-cpp
    MAVSDK::mavsdk
    msgs_idl
)

# dds test executable, base for creation of flightmanager
# add_executable(dds_mav_test 
#     src/test/dds_mav_pub.cpp 
#     src/utils.cpp)

# main flight manager executable
add_executable(flight_manager 
    src/flightManager.cpp
    src/utils.cpp)
# adding custom command to symlink and copy config files into build
add_custom_command(
    TARGET flight_manager PRE_BUILD
    COMMAND ${CMAKE_COMMAND} -E create_symlink
    ${CMAKE_CURRENT_SOURCE_DIR}/config 
    ${CMAKE_CURRENT_BINARY_DIR}/config)

# main launcher executable, that will launch flight managers
add_executable(launcher src/launcher.cpp)

# main mission manager, which is a centralized command system
add_executable(mission_manager 
    src/missionManager.cpp
    src/utils.cpp)
target_link_libraries(mission_manager stdc++fs)

# visualization with foxglove studio
add_executable(foxglove_visual 
    src/foxgloveVisual.cpp
    src/utils.cpp
    ${DDS_TYPES_SOURCES_CXX}
    ${proto_sources})
target_include_directories(foxglove_visual 
    PUBLIC
    ${FOXGLOVE_INCLUDE_DIR}
    ${CMAKE_CURRENT_BINARY_DIR}/autogenerated)
target_link_libraries(foxglove_visual
    foxglove_websocket
    protobuf::libprotobuf)

set(SOCKPP_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/sockpp/include)

# mavlink proxy sender
add_executable(mavlinkProxy
    src/mavAgentProxy.cpp
    src/utils.cpp
)
target_include_directories(mavlinkProxy 
    PUBLIC
    ${SOCKPP_INCLUDE_DIR}
)
set_target_properties(mavlinkProxy PROPERTIES
    CMAKE_CXX_STANDARD 14
    CXX_EXTENSIONS OFF
)
target_link_libraries(mavlinkProxy
    sockpp
)
target_compile_options(mavlinkProxy 
    PRIVATE -DCMAKE_CXX_FLAGS="-Werror -Wall -Wextra -Wno-dev")